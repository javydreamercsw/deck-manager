<?xml version="1.0" encoding="UTF-8"?>
<project name="CP" basedir=".">
    <import file="preparation.xml"/>
    <import file="nbproject/platform.xml"/>
    
    <target name="netbeans" depends="-init-netbeans, -init-hudson">
        <propertyselector property="subprojects" match="original.project.dir(.*)" select="\1"/>
        <for list="${subprojects}" param="subproject">
            <sequential>
                <if>
                    <isset property="original.project.dir@{subproject}"/>
                    <then>
                        <property file="${original.project.dir@{subproject}}/nbproject/project.properties" 
                                  prefix="extension-lib@{subproject}"/>
                        <length string="${extension-lib@{subproject}.dist.dir}" 
                                property="length@{subproject}.dist" />
                        <math result="length@{subproject}.dist" operand1="1" operation="+" operand2="${length@{subproject}.dist}" datatype="int"/>
                        <length string="${extension-lib@{subproject}.dist.jar}" 
                                property="length@{subproject}.dist.jar" />
                        <substring text="${extension-lib@{subproject}.dist.jar}" 
                                   start="${length@{subproject}.dist}" 
                                   end="${length@{subproject}.dist.jar}" 
                                   property="extension-lib@{subproject}.dist.jar" />
                        <!--Update the module's property file-->
                        <propertyfile file="nbproject/project.properties">
                            <entry key="extra.module.files" value="modules/ext/extension/${extension-lib@{subproject}.dist.jar}"/>
                        </propertyfile>
                        <!--Update the project's metadata-->
                        <xmltask source="nbproject/project.xml" dest="nbproject/project.xml" failWithoutMatch="true">
                            <replace path="/*[name()='project']/*[name()='configuration']/*[name()='data']/*[name()='class-path-extension'][@{subproject}]/*[name()='runtime-relative-path']/text()" 
                                     withText="ext/extension/${extension-lib@{subproject}.dist.jar}"/>
                            <replace path="/*[name()='project']/*[name()='configuration']/*[name()='data']/*[name()='class-path-extension'][@{subproject}]/*[name()='binary-origin']/text()" 
                                     withText="${original.project.dir@{subproject}}/dist/${extension-lib@{subproject}.dist.jar}"/>
                        </xmltask>
                        <property name="original.project@{subproject}.jar"
                                  value="${original.project.dir@{subproject}}/dist/${extension-lib@{subproject}.dist.jar}"/>
                        <echo message="Building ${original.project.dir@{subproject}}"/>
                        <ant dir="${original.project.dir@{subproject}}" usenativebasedir="true"
                             target="jar" inheritall="false" inheritrefs="false"/>
                        <echo message="Done building ${original.project.dir@{subproject}}"/>
                        <copy todir="../build/cluster/modules/ext/extension" file="${original.project@{subproject}.jar}"/>
                    </then>
                </if>
            </sequential>
        </for>
        <antcall target="projectized-common.netbeans"/>
    </target>
    
    <target name="clean" depends="-init-netbeans, -init-hudson">
        
        <propertyselector property="subprojects" match="original.project.dir(.*)" select="\1"/>
        <for list="${subprojects}" param="subproject">
            <sequential>
                <if>
                    <isset property="original.project.dir@{subproject}"/>
                    <then>
                        <echo message="Cleaning ${original.project.dir@{subproject}}"/>
                        <ant dir="${original.project.dir@{subproject}}" usenativebasedir="true"
                             target="clean" inheritall="true" inheritrefs="false"/>
                        <echo message="Done cleaning ${original.project.dir@{subproject}}"/>
                    </then>
                </if>
            </sequential>
        </for>
    </target>
</project>
